1.3.2
Роздрукувати вміст змінної msg двома шляхами, перший набравши назву змінної в інтерпретаторі, другий - використавши команду print

>>> msg = "test"
>>> msg
'test'
>>> print msg
test

1.3.6
#визначити стрічку s='colorless'. Використовуючи зрізи та операції поєднання змінити стрічку до вигляду "colourless"

s = 'colorless'
new_s = s[:4] + 'u' + s[4:]
print new_s
colourless

1.3.9
#Організуйте доступ до елементів стрічки з визначеним кроком.

s = 'colorless'

#визначаємо крок з яким будемо виводити символи
step = 3 

#реалізуємо цикл який повертатиме нам індекси з заданим кроком
for i in range(0, len(s), step):  
    print s[i]
    
c
o
e

1.3.12
#Представити прізвище, ім'я та по батькові як список стрічок. Розділити речення на окремі елементи, межа рорзділу голосна
буква

userInfo = ["Oleh", "Hirniak", "Hryhorovych"]
for i in range(len(userInfo)):
    # заміняємо слово на окремі елементи з межою розділення "і"
    userInfo[i] = userInfo[i].split("i")
print userInfo
[['Oleh'], 'Hirniak', 'Hryhorovych']
[['Oleh'], ['H', '', 'rn', '', 'ak'], 'Hryhorovych']
[['Oleh'], ['H', 'rn', 'ak'], ['Hryhorovych']]

1.3.15
#15.Створити список phrase1, який складається із значень ім’я , по батькові, прізвище студента. Що відбудеться при спробі ввести в інтерпретатор наступний оператор phrase1[2][2]. Поясніть результат.
phrase1=['imja','prizvyshche','pobatkovi']
print phrase1[2][2]
# Виводиться літера b оскільки ми робимо індексацію другого елемента в другому елементі стрічки
print '------------------'

1.3.20
print '\n >>> task 23 <<<'
silly = 'newly formed bland ideas are inexpressible in an infuriating way'
bland = silly.split()
bland.sort()
print "\n sorted silly"
print bland

1.3.24
#Використайте функцію index() наступним чином ’inexpressible’.index(’e’).
#Що станеться якщо виконати ’inexpressible’.index(’re’)
print "\n6)"
str2 = 'inexpressible'
str3 = 'press'
print 'Symbol \'e\' has index - ' + str(str2.index('e'))
print 'Symbols \'re\' have index of the inicial symbol \'r\' - ' + str(str2.index('re'))
print 'Symbol \'' + str3 + '\' has index - ' + str(str2.index(str3))
