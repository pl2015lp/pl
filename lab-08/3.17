 NLTK реалізовано алгоритм Левінштейна для порівняння стрічок.
#Спробуйте скористатись цим модулем nltk.edit_dist().
#Яким чином в цьому модулі використовується динамічне програмування?
#Який підхід використовується знизу-вверх чи зверху-вниз? Пояснити письмово. 

word1='kind'
word2='kindness'
print nltk.edit_distance(word1,word2)
print nltk.edit_distance('do','does')
print nltk.edit_distance('bad','bat')
print 'Цей алгоритм рахує відстань між двома стрічками, відстань між ними це кількість елементів які потрібно поміняти, вставити або видалити для того, щоб змінити слово 1 на слово 2'
print 'Підхід знизу-вверх, спочатку ми визначаємо довжину 1 і 2 слів і потім відстань між ними'
