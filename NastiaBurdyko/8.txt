1.	Створити список слів і зберегти їх в змінній sent1. Здійснити операцію присвоювання sent2 = sent1. Змінити один з елементів в sent1 і перевірити чи змінився sent2. Результат письмово пояснити.
>>> sent1=['I','would','like','to','have','a','cup','of','coffee']
>>> sent2=sent1
>>> sent1[8]='tea'
>>> sent1
['I', 'would', 'like', 'to', 'have', 'a', 'cup', 'of', 'tea']
>>> sent2
['I', 'would', 'like', 'to', 'have', 'a', 'cup', 'of', 'tea']
>>> 
В цьому прикладі  відбувається присвоєння посилання на значення змінної sent1 новій змінній sent2. Якщо відбуваються зміни в sent1 то ці зміни також торкаються і sent2.
9.Гематрія – метод виявлення прихованого змісту слів на основі порівняння чисел, які відповідають словам. Слова з однаковими числами мають однаковий зміст. Число слова визначається сумуванням чисел, як відповідають його літерам. Написати функцію gematria() для сумування числових значень літер в слові згідно наступних значень >>> letter_vals = {'a':1, 'b':2, 'c':3, 'd':4, 'e':5, 'f':80, 'g':3, 'h':8,'i':10, 'j':10, 'k':20, 'l':30, 'm':40, 'n':50, 'o':70, 'p':80, 'q':100, 'r':200, 's':300, 't':400, 'u':6, 'v':6, 'w':800, 'x':60, 'y':10, 'z':7}letter_vals:

>>> def gematria(word):
	letter_vals = {'a':1, 'b':2, 'c':3, 'd':4, 'e':5, 'f':80, 'g':3, 'h':8,'i':10, 'j':10, 'k':20, 'l':30, 'm':40, 'n':50, 'o':70, 'p':80, 'q':100, 'r':200, 's':300, 't':400, 'u':6, 'v':6, 'w':800, 'x':60, 'y':10, 'z':7}
	gematria_word=0
	for w in word:
		gematria_word+=letter_vals[w]
		return gematria_word

>>> gematria('word')
800

12.Написати функцію shorten(text, n) обробки тексту , для вилучення n найбільш частотних слів в тексті. Яким чином змінилась читабельність тексту, після вилучення цих слів?
>>> a='Swedish Interior Minister Anders Ygeman said the step had been decided because a surge in new arrivals posed a threat to public order.The controls will come into effect from midday local time on Thursday and will last initially for 10 days.EU and African leaders are to hold a second day of talks in Malta to discuss measures to stem the flow of migrants.The two sides are due to sign an agreement to set up a €1.8bn (£1.3bn; $1.9bn) Emergency Trust Fund for Africa.'
Unsupported characters in input

>>> a='Swedish Interior Minister Anders Ygeman said the step had been decided because a surge in new arrivals posed a threat to public order.The controls will come into effect from midday local time on Thursday and will last initially for 10 days.EU and African leaders are to hold a second day of talks in Malta to discuss measures to stem the flow of migrants.'
>>> import nltk
>>> def shorten(text,n):
	fd=nltk.FreqDist(nltk.word_tokenize(text))
	b=fd.keys()[:n]
	c=[]
	for i in nltk.word_tokenize(text):
		if i not in b:
			c+=[i]
	import string
	print'Naiczastotnishi slova:' ,b
	return string.join(c)

>>> shorten(a,10)
Naiczastotnishi slova: ['to', 'a', 'and', 'in', 'of', 'the', 'will', '.', '10', 'African']
'Swedish Interior Minister Anders Ygeman said step had been decided because surge new arrivals posed threat public order.The controls come into effect from midday local time on Thursday last initially for days.EU leaders are hold second day talks Malta discuss measures stem flow migrants'
>>> 
15. Написати функцію, яка приймає текст і словник, як аргументи і повертає набір слів, які є у тексті але відсутні у словнику. Аргументи повинні бути представлені, як списки стрічок. Чи може функція мати один рядок при використанні set.difference()?
>>> a=['good','well','salt','love','boogie','walkie-takie']
>>> dict=['good','well','love','salt']
>>> def diff(text,dic):
	return set(text).difference(dic)

>>> diff(a,dict)
set(['walkie-takie', 'boogie'])
>>> 
17.	В NLTK реалізовано алгоритм Левінштейна для порівняння стрічок. Спробуйте скористатись цим модулем nltk.edit_dist(). Яким чином в цьому модулі використовується динамічне програмування? Який підхід використовується знизу-вверх чи зверху-вниз? Пояснити письмово. 
>>> w1 = 'spring'
>>> w2 = 'spring winter'
>>> import nltk
>>> nltk.edit_distance(w1, w2)
7
Даний модуль використовує динамічне програмування, адже завдання містить підзавдання, які перетинаються. Використовується підхід знизу вверх, адже робота починається з визначення довжини стрічок, а потім визначає відстань між ними.