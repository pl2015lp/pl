#2
sent1=['All', 'we', 'need', 'is', 'love', '.']
sent2=sent1[:]
print sent2
sent1[1]='thousand'
print sent1
print sent2
print 'sent2 ne zminylosia, bo zminy buly vneseni pisla operacii prysvoienna'

#10
import nltk, re, pprint, string
from string import ascii_lowercase
letter_vals={'a':1, 'b':2, 'c':3, 'd':4, 'e':5, 'f':80, 'g':3, 'h':8, 'i':10, 'j':10, 'k':20, 'l':30, 'm':40, 'n':50, 'o':70, 'p':80, 'q':100, 'r':200, 's':300, 't':400, 'u':6, 'v':6, 'w':800, 'x':60, 'y':10, 'z':7}
def gematria(text):
	tokens=nltk.word_tokenize(text)
	count=0
	s=[]
	words=[]
	for token in tokens:
		sum=0
		word_list=list(token)
		if token not in s:
			s.append(token)
			for letter in word_list:
				if letter in string.ascii_lowercase:
					sum+=letter_vals[letter]
		if sum==555 or sum==777:
			count+=1
			words.append(token)
	return count
from nltk.corpus import state_union
for fileid in state_union.fileids():
	w=gematria(string.lower(state_union.raw(fileid)))
	print w, fileid

#17
import nltk
print "\n17)\n"
print nltk.edit_distance("goose", "geese")
print nltk.edit_distance("man", "men")

#13
from nltk.corpus import wordnet as wn
right_whale=wn.synset('right_whale.n.01')
synsets=['minke_whale.n.01', 'orca.n.01', 'novel.n.01', 'tortoise.n.01']
for i in synsets:
	list_sim=[]
	w1=right_whale
	w2=wn.synset(i)
	similarity=w1.path_similarity(w2)
	list_sim.append((i,similarity))
	sorted(list_sim)
print (list_sim)

#15
txt=['All','we','need', 'is', 'love']
dictn=['we', 'need', 'love']
def diff(text,dic):
    return set(text).difference(dic)
diff(txt,dictn)

print diff(txt,dictn)